<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_501_LandscapeWall">
		<control type="group">
			<!-- <include>OpenClose_Right</include> -->
			<!-- <include>Visible_Right</include> -->
			<height>100%</height>
			<visible>Control.IsVisible(501)</visible>
			<animation condition="Control.HasFocus(501) | Control.HasFocus(531) | ControlGroup(9000).HasFocus">
				<effect type="fade" start="0" end="100" time="300" tween="cubic" easing="in"/>
				<effect type="slide" start="0,937" end="0,0" time="500" tween="cubic" easing="out" />
			</animation>
			<control type="panel" id="501">
				<top>65</top>
				<onleft>531</onleft>
				<onright condition="Integer.IsGreater(Container.NumPages,1)">531</onright>
				<onright condition="!Integer.IsGreater(Container.NumPages,1)">501</onright>
				<onup>501</onup>
				<ondown>501</ondown>
				<onback condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onback>
				<onunfocus condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onunfocus>
				<onunfocus condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onunfocus>
				<viewtype label="311023">icon</viewtype>
				<preloaditems>2</preloaditems>
				<pagecontrol>531</pagecontrol>
				<scrolltime tween="cubic" easing="out">600</scrolltime>
				<!-- <visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(artists) | Container.Content(albums) | Container.Content(musicvideos) | Container.Content(images) | Container.Content(videos) | Container.Content(games)</visible> -->
				<visible>
					[Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | 

					[Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | 

					[Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | 

					[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | 

					[Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | 

					[Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | 

					[Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes.outside),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.episodes.outside),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.episodes.outside),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.episodes.outside),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes.outside))]] | 

					[Container.Content(episodes) + String.StartsWith(Container.PluginCategory,Season) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes.inside),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.episodes.inside),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.episodes.inside),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.episodes.inside),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes.inside))]] | 
					
					[Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | 

					[Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | 

					[Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | 

					[Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[311023]) | String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[310981]) | String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[31100]) | String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[31107]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]]
				</visible>

				<!-- DEFAULT -->
				<!-- W:430 H:242 -->
				<itemlayout width="470" height="282" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),0) + !Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="501"/>
						</include>
            <left>21</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include>LandscapeLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="470" height="282" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),0) + !Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
            <left>21</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include content="LandscapeLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
						<include>FocusBounce</include>
						<include>VideoTrailerControl</include>
					</control>
				</focusedlayout>
				<itemlayout width="470" height="340" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),0) + Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="501"/>
						</include>
            <left>21</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include>LandscapeLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="470" height="340" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),0) + Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
            <left>21</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include content="LandscapeLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
						<include>FocusBounce</include>
						<include>VideoTrailerControl</include>
					</control>
				</focusedlayout>

				<!-- LARGE LAYOUT -->
				<!-- W:582 H:327 -->
				<itemlayout width="616" height="361" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),1) + !Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="501"/>
						</include>
            <left>33</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include>BigLandscapeLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="616" height="361" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),1) + !Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
            <left>33</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include content="BigLandscapeLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
						<include>FocusBounce</include>
						<include>VideoTrailerControl</include>
					</control>
				</focusedlayout>
				<itemlayout width="636" height="400" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),1) + Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="501"/>
						</include>
            <left>13</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include>BigLandscapeLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="636" height="400" condition="String.IsEqual(Skin.String(ArtworkSize501Setting),1) + Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
            <left>13</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include content="BigLandscapeLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
						<include>FocusBounce</include>
						<include>VideoTrailerControl</include>
					</control>
				</focusedlayout>

				<!-- SMALL LAYOUT -->
				<!-- W:317 H:178 -->
				<itemlayout width="358" height="213"  condition="String.IsEqual(Skin.String(ArtworkSize501Setting),2) + !Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="501"/>
						</include>
            <left>65</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include>SmallLandscapeLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="358" height="213"  condition="String.IsEqual(Skin.String(ArtworkSize501Setting),2) + !Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
            <left>65</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include content="SmallLandscapeLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
						<include>FocusBounce</include>
						<include>VideoTrailerControl</include>
					</control>
				</focusedlayout>
				<itemlayout width="380" height="255"  condition="String.IsEqual(Skin.String(ArtworkSize501Setting),2) + Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="501"/>
						</include>
						<left>20</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include>SmallLandscapeLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="380" height="255"  condition="String.IsEqual(Skin.String(ArtworkSize501Setting),2) + Skin.HasSetting(Enable.501Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
            <left>20</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include content="SmallLandscapeLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
						<include>FocusBounce</include>
						<include>VideoTrailerControl</include>
					</control>
				</focusedlayout>

				<!-- EPISODES -->
				<!-- W:582 H:327 -->
				<itemlayout width="616" height="361"  condition="Container.Content(episodes) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="501"/>
						</include>
            <left>33</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include>BigLandscapeLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="616" height="361"  condition="Container.Content(episodes) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
            <left>33</left>
						<!-- <top>45</top> -->
						<top>0</top>
						<include content="BigLandscapeLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
						<include>FocusBounce</include>
					</control>
				</focusedlayout>
				<!-- <itemlayout height="301" width="300" condition="Container.Content(episodes) | Container.Content(videos) | [Container.Content(musicvideos) + !Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<top>110</top>
						<include content="FlixEpisodeLayout">
							<param name="label" value="$INFO[ListItem.Label]" />
							<param name="thumb_label" value="$INFO[ListItem.Label2]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="301" width="300" condition="Container.Content(episodes) | Container.Content(videos) | [Container.Content(musicvideos) + !Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>110</top>
						<include content="FlixEpisodeLayout">
							<param name="focused" value="true" />
							<param name="thumb_label" value="$INFO[ListItem.Label2]" />
						</include>
					</control>
				</focusedlayout> -->
				<itemlayout height="425" width="442" condition="Container.Content(images)">
					<control type="group">
						<left>40</left>
						<top>150</top>
						<include>PosterInfoPictureLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="425" width="442" condition="Container.Content(images)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>40</left>
						<top>150</top>
						<include content="PosterInfoPictureLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<!-- <itemlayout height="401" width="300" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<top>150</top>
						<include content="SquareLayout">
							<param name="fallback_image" value="DefaultMusicSongs.png" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="401" width="300" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>150</top>
						<include content="SquareLayout">
							<param name="fallback_image" value="DefaultMusicSongs.png" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout> -->
				<!-- <itemlayout height="401" width="300" condition="Container.Content(addons)">
					<control type="group">
						<top>150</top>
						<include content="SquareLayout">
							<param name="fallback_image" value="DefaultAddon.png" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="401" width="300" condition="Container.Content(addons)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>150</top>
						<include content="SquareLayout">
							<param name="fallback_image" value="DefaultAddon.png" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout> -->
			</control>
			<include content="TopBottomBars">
				<param name="top_visible" value="!Skin.HasSetting(Enable.501Dim)"/>
				<param name="bottom_visible" value="!Skin.HasSetting(Enable.501Dim) | !Skin.HasSetting(Enable.501Info)"/>
			</include>
			<control type="label">
				<left>37</left>
				<right>video_header_right</right>
				<top>15</top>
				<label>$VAR[LeftVideoHeader]</label>
				<font>font30_title_uppercase</font>
				<textcolor>$VAR[FocusColorTheme]</textcolor>
				<shadowcolor>text_shadow</shadowcolor>
				<align>left</align>
				<scroll>true</scroll>
				<scrollspeed>170</scrollspeed>
				<!-- <visible>!Window.IsVisible(busydialog)</visible> -->
				<animation effect="slide" end="-7,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),1) + Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="13,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),1) + !Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="-1,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),2) + Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="43,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),2) + !Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="13,0" condition="Container.Content(episodes)">Conditional</animation>
			</control>
			<control type="label">
				<right>37</right>
				<top>15</top>
				<width>1815</width>
				<label>$VAR[RightVideoHeader]</label>
				<font>font30_title_uppercase</font>
				<textcolor>$VAR[FocusColorTheme]</textcolor>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<!-- <visible>!Window.IsVisible(busydialog)</visible> -->
				<animation effect="slide" end="7,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),1) + Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="-13,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),1) + !Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="-3,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),2) + Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="-47,0" condition="!Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkSize501Setting),2) + !Skin.HasSetting(Enable.501Titles)">Conditional</animation>
				<animation effect="slide" end="-13,0" condition="Container.Content(episodes)">Conditional</animation>
			</control>
			<control type="image">
        <bottom>0</bottom>
        <width>100%</width>
        <height>350</height>
        <texture colordiffuse="black">overlays/bottombarinfo.png</texture>
        <visible>Skin.HasSetting(Enable.501Info)</visible>
        <animation effect="fade" start="0" end="100" time="300">VisibleChange</animation>
      </control>
		</control>
	</include>
</includes>
