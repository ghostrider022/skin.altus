<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
  <variable name="SkinSettingsHelpTextVar">
		<!-- MAIN MENU ITEMS SECTION -->
		<value condition="Container(9000).HasFocus(1)">$LOCALIZE[31130]</value>

		<!-- GENERAL CONFIGURATION SECTION -->
		<value condition="Container(9000).HasFocus(5)">$LOCALIZE[31129]</value>

		<!-- WIDGET OPTIONS SECTION -->
		<value condition="Container(9000).HasFocus(9) + !ControlGroup(10000).HasFocus">Widget related options</value>
		<value condition="Control.HasFocus(64001)">Toggle display of clearlogo for spotlight widgets.</value>
		<value condition="Control.HasFocus(64002)">Automatically scroll the focused spotlight widget at regular intervals.[CR][CR]Configure the scroll delay below.</value>
		<value condition="Control.HasFocus(64003)">Set the time interval between automatic spotlight widget scrolls.</value>
		<value condition="Control.HasFocus(64004)">Choose display style for feature landscape widgets.[CR][CR]DEFAULT = Landscape image format.[CR]FANART = Fanart image format.</value>
		<value condition="Control.HasFocus(64005)">Show clearlogo on feature landscape widgets for:[CR][CR]Movies[CR]TV Shows[CR]Seasons</value>
		<value condition="Control.HasFocus(64006)">Set delay before loading a stacked widget.[CR][CR]This is how long Altus will wait after focusing on a stacked category item before loading its content.[CR][CR]Example: With a 3000 setting, Altus waits 3 seconds after focus. If focus remains, the stacked widget begins loading.</value>
		<value condition="Control.HasFocus(64007)">Show a countdown timer for stacked widget loading.[CR][CR]The timer displays in 0.25 second increments within the parent stacked category widget label. When the timer reaches 0, the stacked widget begins loading.</value>
		<value condition="Control.HasFocus(64008)">Toggle whether parent stacked widgets reset when returning to the home screen.[CR][CR]When enabled, all parent stacked widgets will reset to their first item upon returning home.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] This setting also triggers automatic content loading for child stacked widgets.</value>
		<value condition="Control.HasFocus(64009)">Select content to display in the InfoPanel header.</value>
		<value condition="Control.HasFocus(64010)">Show ratings in the InfoPanel.[CR][CR]Select which ratings to display in the API features section.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Requires a valid MDbList API key.</value>
		<value condition="Control.HasFocus(64011)">Configure studio logo display in the InfoPanel footer.[CR][CR]Options: Show for movies only, TV shows only, both, or disable completely.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] This setting applies globally, including video window views.</value>
		<value condition="Control.HasFocus(64012)">$VAR[Capitalize_DimorFadeLabel] unfocused widget rows while showing the focused row in full color and brightness.</value>
		<value condition="Control.HasFocus(64013)">$VAR[Capitalize_DimorFadeLabel] the entire widget section when the main menu is focused.</value>

		<!-- CUSTOMIZATION SECTION -->
		<value condition="Container(9000).HasFocus(2) + !ControlGroup(10000).HasFocus">Various skin settings.</value>
		<value condition="Control.HasFocus(63701)">Configure what the power button in the home screen button menu does.[CR][CR]OPEN SHUTDOWN MENU is the default option. Opens the shutdown menu when clicked.[CR][CR]EXIT closes Kodi with one click.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] The home screen label will change to match your selected option.</value>
		<value condition="Control.HasFocus(63702)">Configure what pressing the back button on home screen widgets does.[CR][CR]OPEN MAIN MENU saves current focus position and opens the main menu.[CR][CR]RESET WIDGET returns focus to the first item in the widget.[CR][CR]BOTH resets the widget and opens the main menu simultaneously.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] If set to RESET WIDGET, the left action must be OPEN MAIN MENU to prevent losing main menu access.</value>
		<value condition="Control.HasFocus(63703)">Configure what pressing the left button on home screen widgets does.[CR][CR]When focus is on the first widget item:[CR][CR]OPEN MAIN MENU opens the main menu.[CR][CR]WRAP TO END moves focus to the last item in the widget.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] If set to WRAP TO END, the back action must be OPEN MAIN MENU or BOTH to maintain main menu access.</value>
		<value condition="Control.HasFocus(63704)">Set the case style for menu items.</value>
		<value condition="Control.HasFocus(63705)">Set the accent color theme for focus frames, menus, and skin elements.[CR][CR]Blur disabled + Accent = Uses selected skin color theme accents.[CR][CR]Blur enabled + Adaptive = Color-changing accents that adapt to current artwork.[CR][CR]Disabled = No accent colors.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] During video playback with BACKGROUND STYLE set to COMBINED/BLUR + COLOR THEME set to Adaptive, buttons and progress bars will match the logo color (clearlogo for media, channel icon for PVR).</value>
		<value condition="Control.HasFocus(63706)">Show current time in the InfoLine.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Only appears in video windows.</value>
		<value condition="Control.HasFocus(63707)">Show item title in the InfoLine.[CR][CR]Displays movie/TV show/episode title and season/episode numbers depending on widget type.</value>
		<value condition="Control.HasFocus(63708)">Choose coloring style for studio logos.[CR][CR]MONOCHROME displays white studio logos.[CR][CR]ADAPTIVE colors logos based on the background accent color.[CR][CR]COLOR shows fully colored studio logos.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Selecting COLOR will prompt you to download colored logos. Click yes to proceed.</value>
		<value condition="Control.HasFocus(63709)">Show a subtle bounce animation when an item receives focus.[CR][CR]Applies to widgets, views, buttons, and most focusable items.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Does not apply to list items in slide-out dialogs or video window views.</value>
		<value condition="Control.HasFocus(63710)">When enabled, unfocused PVR entries with reminders will show a subtle pulsing animation instead of the bell icon.[CR][CR]The animation pulses between the default PVR color and the current theme color.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] This setting only affects unfocused items. Focused items will always display the bell icon.</value>

		<!-- ARTWORK SECTION -->
		<value condition="Container(9000).HasFocus(6) + !ControlGroup(10000).HasFocus">Artwork settings[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Default saturation settings for COMBINED/BLUR background styles are calibrated for WARM color temperature display settings (like Samsung's WARM2 color tone and MOVIE mode).[CR][CR]If you use cooler display settings (such as Dynamic mode), colors may appear oversaturated and unnatural. Simply reduce the saturation values in this section to correct this issue.[CR][CR]Fanart.tv images typically have higher saturation than TMDb artwork.[CR][CR]All changes take effect immediately without requiring a restart.</value>
		<value condition="Container(9000).HasFocus(6) + [Control.HasFocus(6008) | Control.HasFocus(6009) | Control.HasFocus(6010) | Control.HasFocus(6011) | Control.HasFocus(6012)]">$LOCALIZE[31169]</value>
		<value condition="Control.HasFocus(6001)">Choose the background style.[CR][CR]DEFAULT shows the standard color theme.[CR][CR]COMBINED displays background fanart where available. InfoPanel, context menu and other elements have a semi-transparent blur.[CR][CR]BLUR applies full background blur when fanart is available.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] BLUR/COMBINED affects all dialog windows including context menu, shutdown menu, PVR managers, and slide-out dialogs.</value>
		<value condition="Control.HasFocus(6002)">Choose the blur texture.[CR][CR]TINTED shows a darker version of the original blurred image. Brightness varies throughout different areas of the skin.[CR][CR]DARK displays a static grey blur.[CR][CR]DARKER displays a static very dark grey blur.[CR][CR]BLACK completely removes the main blurred background texture.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] This setting only applies to the BLUR background style and affects only the main background image. Panels, dialogs, and other skin elements remain unchanged.</value>
		<value condition="Control.HasFocus(6003)">Set a custom background image.[CR][CR]This image serves as the main background for menus and settings, and as a fallback when fanart isn't available.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Primarily used with FANART or BLUR background styles. With DEFAULT style, this image only appears in FANART/LANDSCAPE LIST views.</value>
		<value condition="Control.HasFocus(6004)">Adjust the intensity of background blur.[CR][CR]Higher values wash out more detail. Lower values preserve more detail.[CR][CR]RECOMMENDED: 2-40. DEFAULT: 20[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Changing this also affects color selection when COLOR THEME is set to ADAPTIVE.</value>
		<value condition="Control.HasFocus(6005)">Set the color saturation of background blur.[CR][CR]Higher values create more vibrant, intense colors. Lower values produce more subtle, neutral colors.[CR][CR]DEFAULT: 1.5</value>
		<value condition="Control.HasFocus(6006)">Restore the default background image.</value>
		<value condition="Control.HasFocus(6007)">Show clearlogos for media content.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Only affects the InfoPanel in video windows. For widget InfoPanel settings, go to Widget Options [B]Â»[/B] Header.</value>

		<!-- RATINGS SECTION -->
		<value condition="Container(9000).HasFocus(4) + !ControlGroup(10000).HasFocus">API related settings.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] All features in this section require a valid MDbList API key.[CR][CR]If you don't have an API key, visit https://mdblist.com to sign up for a free one.</value>
		<value condition="Control.HasFocus(6480) + String.IsEmpty(Skin.String(mdblist_api_key))">Enter your API key to activate ratings, optional trailer source, and optional smart status.</value>
		<value condition="Control.HasFocus(6480) + !String.IsEmpty(Skin.String(mdblist_api_key))">Change your API key.[CR][CR]To completely remove it, enter an empty API key.</value>
		<value condition="Control.HasFocus(6481)">Reset all ratings to NONE.[CR][CR]This will hide all ratings across the skin. To completely remove ratings, enter an empty API key above.</value>
		<value condition="Control.HasFocus(6482) | Control.HasFocus(6483) | Control.HasFocus(6484) | Control.HasFocus(6485) | Control.HasFocus(6486) | Control.HasFocus(6487) | Control.HasFocus(6488)">Select which rating to display in this slot.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] In vertical layouts (InfoPanel), ratings appear from top to bottom (slots 1-7).[CR][CR]In horizontal layouts (Landscape List/PosterFlow/Slide views, Movie information), ratings appear from left to right (slots 1-7).</value>
		<value condition="Control.HasFocus(6489)">Track and color-code movie release dates based on digital release status.[CR][CR][COLOR FF40E0B0]GREEN[/COLOR][CR]Digitally released, past recent window but within expiry window[CR][CR][COLOR FFFFC30B]YELLOW[/COLOR][CR]Digitally released and within recent window[CR][CR][COLOR FFFF4D4D]RED[/COLOR][CR]Not yet digitally released[CR][CR][COLOR unfocused_text]WHITE[/COLOR][CR]Missing digital release info or past expiry window</value>
		<value condition="Control.HasFocus(6490)">Set the digital release recent window.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Changing this value will automatically clear the ratings cache.[CR][CR]All changes take effect immediately without requiring a restart.</value>
		<value condition="Control.HasFocus(6491)">Set the digital release expiry window.[CR][CR]Movies with digital release dates older than this window will display their original release date.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Changing this value will automatically clear the ratings cache.[CR][CR]All changes take effect immediately without requiring a restart.</value>
		<value condition="Control.HasFocus(6492)">Choose trailer source.[CR][CR]DEFAULT uses Kodi's built-in trailer method.[CR][CR]MDBLIST plays trailers from the MDbList API when available.[CR][CR]Trailers can be played via one click in the context menu.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Only MDBLIST option requires an API key.</value>

		<!-- SEARCH SECTION -->
		<value condition="Container(9000).HasFocus(3) + !ControlGroup(10000).HasFocus">Search settings</value>
		<value condition="Control.HasFocus(64700)">Choose your default search provider.[CR][CR]The selected addon will be used for all searches in both the search window and search dialog.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] This can be changed on the fly through the search window button menu.</value>
		<value condition="Control.HasFocus(64701)">Select search interface style.[CR][CR]SEARCH DIALOG opens a panel with shortcuts to search sections (movies/TV shows/etc.) in the selected addon.[CR][CR]SEARCH WINDOW opens a full search interface with search history, TRAKT lists, and more.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] The search window allows searching multiple categories simultaneously (movies, TV shows, keywords, etc.).[CR][CR]It also includes a dedicated stacked widget for viewing TRAKT lists directly.</value>
		<value condition="Control.HasFocus(64702) | Control.HasFocus(64703) | Control.HasFocus(64704) | Control.HasFocus(64705) | Control.HasFocus(64706) | Control.HasFocus(64707) | Control.HasFocus(64708) | Control.HasFocus(64709) | Control.HasFocus(64710) | Control.HasFocus(64711) | Control.HasFocus(64712) | Control.HasFocus(64713)">Enabling or disable the showing of specific search widgets.</value>

		<!-- OSD SECTION -->
		<value condition="Container(9000).HasFocus(7) + !ControlGroup(10000).HasFocus">$LOCALIZE[31171]</value>
		<value condition="Container(9000).HasFocus(7) + [Control.HasFocus(62200) | Control.HasFocus(62201) | Control.HasFocus(62202) | Control.HasFocus(62203) | Control.HasFocus(62204) | Control.HasFocus(62205)]">$LOCALIZE[31171]</value>

		<!-- EXTRAS SECTION -->
		<value condition="Container(9000).HasFocus(10) + !ControlGroup(10000).HasFocus">Extras and cache management options[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Current cache size in megabytes is displayed on the right.</value>
		<value condition="Control.HasFocus(64101)">View changelog and check if helper is up to date.</value>
		<value condition="Control.HasFocus(64102)">Display the welcome screen.</value>
		<value condition="Control.HasFocus(64103)">Unlock all previously locked views.[CR][CR]You can re-lock any view through the View options in any video window.</value>
		<value condition="Control.HasFocus(64104)">Clear all image-related caches.</value>
		<value condition="Control.HasFocus(64105)">Clear the color cache.</value>
		<value condition="Control.HasFocus(64106)">Clear the logo cache.</value>
		<value condition="Control.HasFocus(64107)">Clear the blur cache.</value>
		<value condition="Control.HasFocus(64108)">Clear the ratings cache.</value>
		<value condition="Control.HasFocus(64109)">Clear your search history.[CR][CR][COLOR red][B]NOTE:[/B][/COLOR] Search history is limited to a maximum of 100 items.</value>
	</variable>

  <variable name="PVRGuideControlsHelpTextVar">
		<value condition="Control.HasFocus(600)">$LOCALIZE[19063]</value>
		<value condition="Control.HasFocus(601)">$LOCALIZE[19317]</value>
		<value condition="Control.HasFocus(602)">$LOCALIZE[19070]</value>
		<value condition="Control.HasFocus(603)">$LOCALIZE[19318]</value>
		<value condition="Control.HasFocus(604)">$LOCALIZE[19064]</value>
		<value condition="Control.HasFocus(605)">$LOCALIZE[19288]</value>
		<value condition="Control.HasFocus(70040)">$LOCALIZE[19322]</value>
		<value condition="Control.HasFocus(70041)">$LOCALIZE[19323]</value>
		<value condition="Control.HasFocus(70042)">$LOCALIZE[19324]</value>
		<value condition="Control.HasFocus(70043)">$LOCALIZE[19319]</value>
		<value condition="Control.HasFocus(70044)">$LOCALIZE[19320]</value>
		<value condition="Control.HasFocus(70045)">$LOCALIZE[19321]</value>
	</variable>

	<variable name="OSDHelpTextVar">
		<value condition="Control.HasFocus(87) + !Player.Paused">$LOCALIZE[31054]</value>
		<value condition="Control.HasFocus(87) + [Player.Paused + Window.IsVisible(videoosd)]">$LOCALIZE[31055]</value>
		<value condition="Control.HasFocus(608)+ PVR.IsRecordingPlayingChannel">$LOCALIZE[19059]</value>
		<value condition="Control.HasFocus(608)">$LOCALIZE[264]</value>
		<value condition="Control.HasFocus(804)">$LOCALIZE[33061]</value>
		<value condition="Control.HasFocus(70040)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(70041)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(70042)">$LOCALIZE[31065]</value>
		<value condition="Control.HasFocus(70043)">$LOCALIZE[19033]</value>
		<value condition="Control.HasFocus(70044)">$LOCALIZE[298]</value>
		<value condition="Control.HasFocus(70045)">$LOCALIZE[31106]</value>
		<value condition="Control.HasFocus(70046)">$LOCALIZE[24012]</value>
		<value condition="Control.HasFocus(70047)">$LOCALIZE[36501]</value>
		<value condition="Control.HasFocus(70048)">$LOCALIZE[5]</value>
		<value condition="Control.HasFocus(70050)">$LOCALIZE[29900]</value>
		<value condition="Control.HasFocus(70051)">$LOCALIZE[31066]</value>
		<value condition="Control.HasFocus(70052)">$LOCALIZE[31033]$INFO[MusicPlayer.UserRating, : ]</value>
		<value condition="Control.HasFocus(70053)">$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</value>
		<value condition="Control.HasFocus(70054) + Playlist.IsRandom">$LOCALIZE[590]: $LOCALIZE[16041]</value>
		<value condition="Control.HasFocus(70054)">$LOCALIZE[590]: $LOCALIZE[16039]</value>
		<value condition="Control.HasFocus(70055)">$LOCALIZE[24013]</value>
	</variable>

</includes>